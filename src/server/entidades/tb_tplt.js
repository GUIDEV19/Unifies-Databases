const zscan_database  = require('../db.js')
const formataData = require('../utils/formatDate.js')

async function migrationTb_tplt(tb_exam_tb_ptlt, i){
    if(i < tb_exam_tb_ptlt.length){
        await zscan_database.query({
            query: `insert into tb_tplt (tplt_name,tplt_ftst,tplt_ftsz,tplt_ffst,tplt_ffsz,tplt_algn,tplt_ortn,tplt_size,tplt_mtop,tplt_mrgt,tplt_mbtm,tplt_mlft,tplt_stit,tplt_spid,tplt_sptt,tplt_spdc,tplt_spbd,tplt_spag,tplt_sptg,tplt_spta,tplt_srpi,tplt_sdoc,tplt_shlp,tplt_srqt,tplt_sasn,tplt_tchn,tplt_anth,tplt_seqp,tplt_sdat,tplt_sdex,tplt_sdrr,tplt_sels,tplt_sdgn,tplt_shde,tplt_shpf,tplt_shri,tplt_rinm,tplt_ssgn,tplt_scsg,tplt_sstx,tplt_slbi,tplt_hsec,tplt_fsec,tplt_limg,tplt_linf,tplt_amnt,tplt_lang,tplt_ucrt,tplt_uchd,tplt_udlt,tplt_dhcr,tplt_dhcg,tplt_dhdl) values (
                :tplt_name,
                :tplt_ftst,
                :tplt_ftsz,
                :tplt_ffst,
                :tplt_ffsz,
                :tplt_algn,
                :tplt_ortn,
                :tplt_size,
                :tplt_mtop,
                :tplt_mrgt,
                :tplt_mbtm,
                :tplt_mlft,
                :tplt_stit,
                :tplt_spid,
                :tplt_sptt,
                :tplt_spdc,
                :tplt_spbd,
                :tplt_spag,
                :tplt_sptg,
                :tplt_spta,
                :tplt_srpi,
                :tplt_sdoc,
                :tplt_shlp,
                :tplt_srqt,
                :tplt_sasn,
                :tplt_tchn,
                :tplt_anth,
                :tplt_seqp,
                :tplt_sdat,
                :tplt_sdex,
                :tplt_sdrr,
                :tplt_sels,
                :tplt_sdgn,
                :tplt_shde,
                :tplt_shpf,
                :tplt_shri,
                :tplt_rinm,
                :tplt_ssgn,
                :tplt_scsg,
                :tplt_sstx,
                :tplt_slbi,
                :tplt_hsec,
                :tplt_fsec,
                :tplt_limg,
                :tplt_linf,
                :tplt_amnt,
                :tplt_lang,
                :tplt_ucrt,
                :tplt_uchd,
                :tplt_udlt,
                :tplt_dhcr,
                :tplt_dhcg,
                :tplt_dhdl
            );`,
            values: {
                tplt_name: tb_exam_tb_ptlt[i].tplt_name ? tb_exam_tb_ptlt[i].tplt_name : 'GENERIC UNIFICADO',
                tplt_ftst: tb_exam_tb_ptlt[i].tplt_ftst ? tb_exam_tb_ptlt[i].tplt_ftst : 'Arial',
                tplt_ftsz: tb_exam_tb_ptlt[i].tplt_ftsz ? tb_exam_tb_ptlt[i].tplt_ftsz : 2,
                tplt_ffst: tb_exam_tb_ptlt[i].tplt_ffst ? tb_exam_tb_ptlt[i].tplt_ffst : 'Arial',
                tplt_ffsz: tb_exam_tb_ptlt[i].tplt_ffsz ? tb_exam_tb_ptlt[i].tplt_ffsz : 2,
                tplt_algn: tb_exam_tb_ptlt[i].tplt_algn ? tb_exam_tb_ptlt[i].tplt_algn : 'left',
                tplt_ortn: tb_exam_tb_ptlt[i].tplt_ortn ? tb_exam_tb_ptlt[i].tplt_ortn : 'P',
                tplt_size: tb_exam_tb_ptlt[i].tplt_size ? tb_exam_tb_ptlt[i].tplt_size : 'A4',
                tplt_mtop: tb_exam_tb_ptlt[i].tplt_mtop ? tb_exam_tb_ptlt[i].tplt_mtop : 1,
                tplt_mrgt: tb_exam_tb_ptlt[i].tplt_mrgt ? tb_exam_tb_ptlt[i].tplt_mrgt : 1,
                tplt_mbtm: tb_exam_tb_ptlt[i].tplt_mbtm ? tb_exam_tb_ptlt[i].tplt_mbtm : 1,
                tplt_mlft: tb_exam_tb_ptlt[i].tplt_mlft ? tb_exam_tb_ptlt[i].tplt_mlft : 1,
                tplt_stit: tb_exam_tb_ptlt[i].tplt_stit ? tb_exam_tb_ptlt[i].tplt_stit : 1,
                tplt_spid: tb_exam_tb_ptlt[i].tplt_spid ? tb_exam_tb_ptlt[i].tplt_spid : 0,
                tplt_sptt: tb_exam_tb_ptlt[i].tplt_sptt ? tb_exam_tb_ptlt[i].tplt_sptt : 1,
                tplt_spdc: tb_exam_tb_ptlt[i].tplt_spdc ? tb_exam_tb_ptlt[i].tplt_spdc : 0,
                tplt_spbd: tb_exam_tb_ptlt[i].tplt_spbd ? tb_exam_tb_ptlt[i].tplt_spbd : 1,
                tplt_spag: tb_exam_tb_ptlt[i].tplt_spag ? tb_exam_tb_ptlt[i].tplt_spag : 1,
                tplt_sptg: tb_exam_tb_ptlt[i].tplt_sptg ? tb_exam_tb_ptlt[i].tplt_sptg : 1,
                tplt_spta: tb_exam_tb_ptlt[i].tplt_spta ? tb_exam_tb_ptlt[i].tplt_spta : 1,
                tplt_srpi: tb_exam_tb_ptlt[i].tplt_srpi ? tb_exam_tb_ptlt[i].tplt_srpi : 1,
                tplt_sdoc: tb_exam_tb_ptlt[i].tplt_sdoc ? tb_exam_tb_ptlt[i].tplt_sdoc : 0,
                tplt_shlp: tb_exam_tb_ptlt[i].tplt_shlp ? tb_exam_tb_ptlt[i].tplt_shlp : 0,
                tplt_srqt: tb_exam_tb_ptlt[i].tplt_srqt ? tb_exam_tb_ptlt[i].tplt_srqt : 1,
                tplt_sasn: tb_exam_tb_ptlt[i].tplt_sasn ? tb_exam_tb_ptlt[i].tplt_sasn : 0,
                tplt_tchn: tb_exam_tb_ptlt[i].tplt_tchn ? tb_exam_tb_ptlt[i].tplt_tchn : 0,
                tplt_anth: tb_exam_tb_ptlt[i].tplt_anth ? tb_exam_tb_ptlt[i].tplt_anth : 0,
                tplt_seqp: tb_exam_tb_ptlt[i].tplt_seqp ? tb_exam_tb_ptlt[i].tplt_seqp : 0,
                tplt_sdat: tb_exam_tb_ptlt[i].tplt_sdat ? tb_exam_tb_ptlt[i].tplt_sdat : 1,
                tplt_sdex: tb_exam_tb_ptlt[i].tplt_sdex ? tb_exam_tb_ptlt[i].tplt_sdex : 0,
                tplt_sdrr: tb_exam_tb_ptlt[i].tplt_sdrr ? tb_exam_tb_ptlt[i].tplt_sdrr : 0,
                tplt_sels: tb_exam_tb_ptlt[i].tplt_sels ? tb_exam_tb_ptlt[i].tplt_sels : 0,
                tplt_sdgn: tb_exam_tb_ptlt[i].tplt_sdgn ? tb_exam_tb_ptlt[i].tplt_sdgn : 1,
                tplt_shde: tb_exam_tb_ptlt[i].tplt_shde ? tb_exam_tb_ptlt[i].tplt_shde : 1,
                tplt_shpf: tb_exam_tb_ptlt[i].tplt_shpf ? tb_exam_tb_ptlt[i].tplt_shpf : 0,
                tplt_shri: tb_exam_tb_ptlt[i].tplt_shri ? tb_exam_tb_ptlt[i].tplt_shri : 0,
                tplt_rinm: tb_exam_tb_ptlt[i].tplt_rinm ? tb_exam_tb_ptlt[i].tplt_rinm : '',
                tplt_ssgn: tb_exam_tb_ptlt[i].tplt_ssgn ? tb_exam_tb_ptlt[i].tplt_ssgn : 0,
                tplt_scsg: tb_exam_tb_ptlt[i].tplt_scsg ? tb_exam_tb_ptlt[i].tplt_scsg : 1,
                tplt_sstx: tb_exam_tb_ptlt[i].tplt_sstx ? tb_exam_tb_ptlt[i].tplt_sstx : 0,
                tplt_slbi: tb_exam_tb_ptlt[i].tplt_slbi ? tb_exam_tb_ptlt[i].tplt_slbi : 1,
                tplt_hsec: tb_exam_tb_ptlt[i].tplt_hsec ? tb_exam_tb_ptlt[i].tplt_hsec : 2,
                tplt_fsec: tb_exam_tb_ptlt[i].tplt_fsec ? tb_exam_tb_ptlt[i].tplt_fsec : 3,
                tplt_limg: tb_exam_tb_ptlt[i].tplt_limg ? tb_exam_tb_ptlt[i].tplt_limg : 1,
                tplt_linf: tb_exam_tb_ptlt[i].tplt_linf ? tb_exam_tb_ptlt[i].tplt_linf : null,
                tplt_amnt: tb_exam_tb_ptlt[i].tplt_amnt ? tb_exam_tb_ptlt[i].tplt_amnt : 3,
                tplt_lang: tb_exam_tb_ptlt[i].tplt_lang ? tb_exam_tb_ptlt[i].tplt_lang : 'PT-BR',
                tplt_ucrt: tb_exam_tb_ptlt[i].tplt_ucrt ? tb_exam_tb_ptlt[i].tplt_ucrt : null,
                tplt_uchd: tb_exam_tb_ptlt[i].tplt_uchd ? tb_exam_tb_ptlt[i].tplt_uchd : null,
                tplt_udlt: tb_exam_tb_ptlt[i].tplt_udlt ? tb_exam_tb_ptlt[i].tplt_udlt : null,
                tplt_dhcr: tb_exam_tb_ptlt[i].tplt_dhcr ? formataData(tb_exam_tb_ptlt[i].tplt_dhcr) : '2018-10-30 19:54:37',
                tplt_dhcg: tb_exam_tb_ptlt[i].tplt_dhcg ? formataData(tb_exam_tb_ptlt[i].tplt_dhcg) : '2018-10-30 19:54:37',
                tplt_dhdl: tb_exam_tb_ptlt[i].tplt_dhcg ? formataData(tb_exam_tb_ptlt[i].tplt_dhcg) : null

            }
        }).catch(
            (e) => {
                console.log(e)
                return 
            }
        ); 
    };
};

module.exports = migrationTb_tplt